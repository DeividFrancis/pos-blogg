// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tag {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  content   String    @unique
  posts     Post[]
  // 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   DateTime?
}

model Comment {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  content   String?
  post      Post      @relation(fields: [postId], references: [id])
  postId    Int
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  // 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   DateTime?
}

model Post {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  title     String    @db.VarChar(255)
  content   String?
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  // 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   DateTime?
  comments  Comment[]
  tags      Tag[]
}

model Profile {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  bio       String?
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @unique
  // 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   DateTime?
}

model User {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(uuid())
  email     String    @unique
  name      String?
  posts     Post[]
  profile   Profile?
  // 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   DateTime?
  comments  Comment[]
}
